profiles {

    standard {
        process.executor = 'local'
    }

    cluster{
        process.executor='lsf'
        process.queue='production-rh74'
        process.clusterOptions = '-R \"select[hname!=\'hx-noah-05-02\']\"'

        executor.queueSize=1000
        executor.perJobMemLimit=true
        executor.exitReadTimeout='100000 sec'
        executor.pollInterval = '5sec'
        conda.createTimeout = "30 min"
    } 
}

params {
    query_expr_data = "${baseDir}/data/10x_data"

    garnett{        
        results_dir = "${baseDir}/data/outputs" // output for outer workflow
        classifiers = "${baseDir}/data/garnett_classifiers/*"
        cluster_extend = "TRUE"
        cds_gene_id_type = "ENSEMBL" 
        database = "org.Hs.eg.db"
        rank_prob_ratio = "1.5"
        predicted_cell_type_field = "cluster_ext_type"
        label_dir = "garnett_combined_labs"
    }

    scmap_cluster{
        results_dir = "${baseDir}/data" // output for outer workflow 
        projection_method = "cell" //must be 'cell' or 'cluster'
        clust_idx = "${baseDir}/data/scmap-cluster_classifiers/*"
        col_names = "TRUE"
        pred_threshold = "0.1"
        cluster_col = "Sample.Characteristic.cell.type."
        label_dir = "scmap_clust_outputs"
    }

    scmap_cell{
        results_dir = "${baseDir}/data" // output for outer workflow 
        projection_method = "cell" //must be 'cell' or 'cluster'
        cell_idx = "${baseDir}/data/scmap-cell_classifiers/*"
        col_names = "TRUE"
        pred_threshold = "0.1"
        cluster_col = "Sample.Characteristic.cell.type."
        label_dir = "scmap_cell_outputs"
    }

    scpred{
        results_dir = "$baseDir/data/outputs"
        norm_counts_slot = 'counts'
        col_names = "TRUE"
        scpred_models = "$baseDir/data/scpred_classifiers/*"
        pred_threshold = 0.7
    }

    label_analysis{
        sdrfs = "${baseDir}/data/SDRFs/*"
        tool_perf_table = "${baseDir}/data/tool_perf_pvals.tsv"
        num_cores = 8
        condensed = "TRUE"
        ontology_graph = "${baseDir}/data/cl-basic.obo"
        sem_sim_metric = "edge_resnik"
    }
}

env {
    PROD_WORKFLOWS = "${baseDir}/cell-types-prod-workflows"
}

